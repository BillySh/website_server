'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var has = require('lodash/has');
var Base = require('./base');

var API = 'http://api.cellocation.com:81/cell/';

/* eslint-disable class-methods-use-this */

var Cellocation = function (_Base) {
  _inherits(Cellocation, _Base);

  function Cellocation(options) {
    _classCallCheck(this, Cellocation);

    var _this = _possibleConstructorReturn(this, (Cellocation.__proto__ || Object.getPrototypeOf(Cellocation)).call(this, options));

    if (options) {
      //  Coordinate System
      //  {'wgs84', 'gcj02', 'bd09'}
      _this.system = options.system ? options.system : 'wgs84';
    }
    return _this;
  }

  _createClass(Cellocation, [{
    key: 'getRequestSettings',
    value: function getRequestSettings(cell) {
      return {
        uri: API,
        json: true,
        qs: {
          mcc: cell.mcc,
          mnc: cell.mnc,
          lac: cell.lac,
          ci: cell.cid,
          coord: this.system,
          output: 'json'
        }
      };
    }
  }, {
    key: 'validate',
    value: function validate(body) {
      return body.errcode === 0;
    }
  }, {
    key: 'parseLocation',
    value: function parseLocation(body) {
      return {
        longitude: parseFloat(body.lon),
        latitude: parseFloat(body.lat),
        accuracy: parseInt(body.radius, 10),
        address: body.address
      };
    }
  }, {
    key: 'parseError',
    value: function parseError(body) {
      return has(body, 'error') ? body.error : body;
    }
  }]);

  return Cellocation;
}(Base);

module.exports = Cellocation;